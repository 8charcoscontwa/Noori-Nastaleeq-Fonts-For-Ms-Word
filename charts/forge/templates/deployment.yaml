apiVersion: apps/v1
kind: Deployment
metadata:
  name: forge-api
  labels:
{{ include "forge.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: forge-api
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: forge-api
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: {{ .Values.api.port | quote }}
    spec:
      serviceAccountName: forge
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 6 }}
    {{- end }}
      containers:
      - name: api
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        envFrom:
        - secretRef:
            name: forge-env
        env:
        - name: HOST
          value: {{ .Values.ingress.dns }}
        - name: DEPLOYED_AT
          value: {{ now | unixEpoch | quote }}
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.dbPasswordSecret }}
              key: postgresql-password
        - name: GCP_CREDENTIALS
          valueFrom:
            secretKeyRef:
              name: forge-serviceaccount
              key: gcp.json
        - name: GCS_BUCKET
          value: {{ .Values.api.bucket }}
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.rabbitPasswordSecret }}
              key: rabbitmq-password
        ports:
        - name: http
          containerPort: {{ .Values.api.port }}
          protocol: TCP
        - name: epmd
          containerPort: 4369
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /health
            port: http
        readinessProbe:
          httpGet:
            path: /health
            port: http
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: forge-worker
  labels:
{{ include "forge.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: forge-worker
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: forge-worker
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: forge
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 6 }}
    {{- end }}
      containers:
      - name: worker
        image: "{{ .Values.worker.repository }}:{{ .Values.worker.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        envFrom:
        - secretRef:
            name: forge-env
        env:
        - name: HOST
          value: {{ .Values.ingress.dns }}
        - name: DEPLOYED_AT
          value: {{ now | unixEpoch | quote }}
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.dbPasswordSecret }}
              key: postgresql-password
        - name: GCP_CREDENTIALS
          valueFrom:
            secretKeyRef:
              name: forge-serviceaccount
              key: gcp.json
        - name: GCS_BUCKET
          value: {{ .Values.api.bucket }}
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.rabbitPasswordSecret }}
              key: rabbitmq-password
        # - name: DOCKER_HOST
        #   value: tcp://localhost:2375
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
      # - name: dind-daemon
      #   image: docker:19-dind
      #   resources:
      #     requests:
      #       cpu: 20m
      #       memory: 256Mi
      #   securityContext:
      #     privileged: true
      #   env:
      #   - name: DOCKER_TLS_CERTDIR
      #     value: /certs
      #   volumeMounts:
      #   - name: share
      #     mountPath: /tmp/shared
      #   - name: docker-storage
      #     mountPath: /var/lib/docker
      #   - name: docker-certs
      #     mountPath: /certs
      # volumes:
      # - name: share
      #   emptyDir: {}
      # - name: docker-storage
      #   emptyDir: {}
      # - name: docker-certs
      #   emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: forge-rtc
  labels:
{{ include "forge.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: forge-rtc
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: forge-rtc
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: {{ .Values.api.port | quote }}
    spec:
      serviceAccountName: forge
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 6 }}
    {{- end }}
      containers:
      - name: rtc
        image: "{{ .Values.rtc.repository }}:{{ .Values.rtc.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        envFrom:
        - secretRef:
            name: forge-env
        env:
        - name: HOST
          value: {{ .Values.ingress.dns }}
        - name: DEPLOYED_AT
          value: {{ now | unixEpoch | quote }}
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.dbPasswordSecret }}
              key: postgresql-password
        - name: GCP_CREDENTIALS
          valueFrom:
            secretKeyRef:
              name: forge-serviceaccount
              key: gcp.json
        - name: GCS_BUCKET
          value: {{ .Values.api.bucket }}
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.rabbitPasswordSecret }}
              key: rabbitmq-password
        ports:
        - name: http
          containerPort: {{ .Values.api.port }}
          protocol: TCP
        - name: epmd
          containerPort: 4369
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /health
            port: http
        readinessProbe:
          httpGet:
            path: /health
            port: http
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chartmuseum
  labels:
{{ include "forge.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: chartmuseum
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: chartmuseum
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 6 }}
    {{- end }}
      containers:
      - name: chartmuseum
        image: "{{ .Values.chartmuseum.repository }}:{{ .Values.chartmuseum.tag }}"
        imagePullPolicy: {{ .Values.chartmuseum.pullPolicy }}
        env:
        - name: PORT
          value: '8080'
        - name: DEPLOYED_AT
          value: {{ now | unixEpoch | quote }}
        - name: DEPTH
          value: '1'
        - name: CONTEXT_PATH
          value: '/cm'
        - name: STORAGE
          value: google
        - name: STORAGE_GOOGLE_BUCKET
          value: {{ .Values.chartmuseum.bucket }}
        - name: STORAGE_GOOGLE_PREFIX
          value: ""
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /home/chartmuseum/.gcp/gcp.json
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /cm/health
            port: http
        readinessProbe:
          httpGet:
            path: /cm/health
            port: http
        volumeMounts:
        - name: gcp
          mountPath: "/home/chartmuseum/.gcp"
          readOnly: true
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: gcp
        secret:
          secretName: forge-serviceaccount
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: forge-www
  labels:
{{ include "forge.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.www.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: forge-www
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: forge-www
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 6 }}
      {{- end }}
      containers:
      - name: www
        image: "{{ .Values.www.image }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: DEPLOYED_AT
          value: {{ now | unixEpoch | quote }}
        ports:
        - name: http
          containerPort: {{ .Values.www.port }}
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: http
        readinessProbe:
          httpGet:
            path: /
            port: http
        resources:
          {{- toYaml .Values.www.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}